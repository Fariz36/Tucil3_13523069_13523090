plugins {
    id 'java'
    id 'application'
}

repositories {
    mavenCentral()
}

// Set Java version
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

// Configure source sets
sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
        resources {
            srcDirs = ['src/resources']
        }
    }
}

// Main application configuration
application {
    mainClass = 'cli.Main'
}

// Dependencies (if needed in future)
dependencies {
    // Add dependencies here if needed
}

// Custom tasks for running CLI and GUI
task runCli(type: JavaExec) {
    group = 'application'
    description = 'Run the CLI version'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'cli.Main'
    standardInput = System.in
}

// Note: GUI task without JavaFX for now
task runGui(type: JavaExec) {
    group = 'application'
    description = 'Run the GUI version (requires JavaFX)'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'gui.GuiMain'
    
    doFirst {
        println 'Note: GUI requires JavaFX to be properly configured'
        println 'Make sure JavaFX is in your classpath'
    }
}

// Task to compile only
task compile {
    dependsOn compileJava
    doLast {
        println 'Compilation completed successfully!'
    }
}

// Create executable JAR
jar {
    manifest {
        attributes(
            'Main-Class': 'cli.Main',
            'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' ')
        )
    }
}

// Task to show project info
task info {
    doLast {
        println "Project: ${project.name}"
        println "Source directories: ${sourceSets.main.java.srcDirs}"
        println "Resource directories: ${sourceSets.main.resources.srcDirs}"
        println "Main class: ${application.mainClass}"
    }
}

// Clean task enhancement
clean {
    doLast {
        println 'Clean completed'
    }
}

// Task to copy resources to build directory
processResources {
    from('src/resources') {
        include '**/*.css'
    }
    from('src/gui/fxml') {
        include '**/*.fxml'
        into 'gui/fxml'
    }
}